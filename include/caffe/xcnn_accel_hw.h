// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// control
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : Data signal of ap_return
//        bit 31~0 - ap_return[31:0] (Read)
// 0x18 : Data signal of data_input_0
//        bit 31~0 - data_input_0[31:0] (Read/Write)
// 0x1c : reserved
// 0x20 : Data signal of data_input_1
//        bit 31~0 - data_input_1[31:0] (Read/Write)
// 0x24 : reserved
// 0x28 : Data signal of data_input_2
//        bit 31~0 - data_input_2[31:0] (Read/Write)
// 0x2c : reserved
// 0x30 : Data signal of data_input_3
//        bit 31~0 - data_input_3[31:0] (Read/Write)
// 0x34 : reserved
// 0x38 : Data signal of data_output_in
//        bit 31~0 - data_output_in[31:0] (Read/Write)
// 0x3c : reserved
// 0x40 : Data signal of data_output_out
//        bit 31~0 - data_output_out[31:0] (Read/Write)
// 0x44 : reserved
// 0x48 : Data signal of weights
//        bit 31~0 - weights[31:0] (Read/Write)
// 0x4c : reserved
// 0x50 : Data signal of weights_bias
//        bit 31~0 - weights_bias[31:0] (Read/Write)
// 0x54 : reserved
// 0x58 : Data signal of n_V
//        bit 15~0 - n_V[15:0] (Read/Write)
//        others   - reserved
// 0x5c : reserved
// 0x60 : Data signal of param_input_h_V
//        bit 15~0 - param_input_h_V[15:0] (Read/Write)
//        others   - reserved
// 0x64 : reserved
// 0x68 : Data signal of param_input_w_V
//        bit 15~0 - param_input_w_V[15:0] (Read/Write)
//        others   - reserved
// 0x6c : reserved
// 0x70 : Data signal of param_input_c_V
//        bit 15~0 - param_input_c_V[15:0] (Read/Write)
//        others   - reserved
// 0x74 : reserved
// 0x78 : Data signal of param_input_s_V
//        bit 15~0 - param_input_s_V[15:0] (Read/Write)
//        others   - reserved
// 0x7c : reserved
// 0x80 : Data signal of param_output_h_V
//        bit 15~0 - param_output_h_V[15:0] (Read/Write)
//        others   - reserved
// 0x84 : reserved
// 0x88 : Data signal of param_output_w_V
//        bit 15~0 - param_output_w_V[15:0] (Read/Write)
//        others   - reserved
// 0x8c : reserved
// 0x90 : Data signal of param_output_c_V
//        bit 15~0 - param_output_c_V[15:0] (Read/Write)
//        others   - reserved
// 0x94 : reserved
// 0x98 : Data signal of param_output_s_V
//        bit 15~0 - param_output_s_V[15:0] (Read/Write)
//        others   - reserved
// 0x9c : reserved
// 0xa0 : Data signal of output_p_V
//        bit 15~0 - output_p_V[15:0] (Read/Write)
//        others   - reserved
// 0xa4 : reserved
// 0xa8 : Data signal of param_kernel_h_V
//        bit 15~0 - param_kernel_h_V[15:0] (Read/Write)
//        others   - reserved
// 0xac : reserved
// 0xb0 : Data signal of param_kernel_w_V
//        bit 15~0 - param_kernel_w_V[15:0] (Read/Write)
//        others   - reserved
// 0xb4 : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XCNN_ACCEL_CONTROL_ADDR_AP_CTRL               0x00
#define XCNN_ACCEL_CONTROL_ADDR_GIE                   0x04
#define XCNN_ACCEL_CONTROL_ADDR_IER                   0x08
#define XCNN_ACCEL_CONTROL_ADDR_ISR                   0x0c
#define XCNN_ACCEL_CONTROL_ADDR_AP_RETURN             0x10
#define XCNN_ACCEL_CONTROL_BITS_AP_RETURN             32
#define XCNN_ACCEL_CONTROL_ADDR_DATA_INPUT_0_DATA     0x18
#define XCNN_ACCEL_CONTROL_BITS_DATA_INPUT_0_DATA     32
#define XCNN_ACCEL_CONTROL_ADDR_DATA_INPUT_1_DATA     0x20
#define XCNN_ACCEL_CONTROL_BITS_DATA_INPUT_1_DATA     32
#define XCNN_ACCEL_CONTROL_ADDR_DATA_INPUT_2_DATA     0x28
#define XCNN_ACCEL_CONTROL_BITS_DATA_INPUT_2_DATA     32
#define XCNN_ACCEL_CONTROL_ADDR_DATA_INPUT_3_DATA     0x30
#define XCNN_ACCEL_CONTROL_BITS_DATA_INPUT_3_DATA     32
#define XCNN_ACCEL_CONTROL_ADDR_DATA_OUTPUT_IN_DATA   0x38
#define XCNN_ACCEL_CONTROL_BITS_DATA_OUTPUT_IN_DATA   32
#define XCNN_ACCEL_CONTROL_ADDR_DATA_OUTPUT_OUT_DATA  0x40
#define XCNN_ACCEL_CONTROL_BITS_DATA_OUTPUT_OUT_DATA  32
#define XCNN_ACCEL_CONTROL_ADDR_WEIGHTS_DATA          0x48
#define XCNN_ACCEL_CONTROL_BITS_WEIGHTS_DATA          32
#define XCNN_ACCEL_CONTROL_ADDR_WEIGHTS_BIAS_DATA     0x50
#define XCNN_ACCEL_CONTROL_BITS_WEIGHTS_BIAS_DATA     32
#define XCNN_ACCEL_CONTROL_ADDR_N_V_DATA              0x58
#define XCNN_ACCEL_CONTROL_BITS_N_V_DATA              16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_INPUT_H_V_DATA  0x60
#define XCNN_ACCEL_CONTROL_BITS_PARAM_INPUT_H_V_DATA  16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_INPUT_W_V_DATA  0x68
#define XCNN_ACCEL_CONTROL_BITS_PARAM_INPUT_W_V_DATA  16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_INPUT_C_V_DATA  0x70
#define XCNN_ACCEL_CONTROL_BITS_PARAM_INPUT_C_V_DATA  16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_INPUT_S_V_DATA  0x78
#define XCNN_ACCEL_CONTROL_BITS_PARAM_INPUT_S_V_DATA  16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_OUTPUT_H_V_DATA 0x80
#define XCNN_ACCEL_CONTROL_BITS_PARAM_OUTPUT_H_V_DATA 16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_OUTPUT_W_V_DATA 0x88
#define XCNN_ACCEL_CONTROL_BITS_PARAM_OUTPUT_W_V_DATA 16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_OUTPUT_C_V_DATA 0x90
#define XCNN_ACCEL_CONTROL_BITS_PARAM_OUTPUT_C_V_DATA 16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_OUTPUT_S_V_DATA 0x98
#define XCNN_ACCEL_CONTROL_BITS_PARAM_OUTPUT_S_V_DATA 16
#define XCNN_ACCEL_CONTROL_ADDR_OUTPUT_P_V_DATA       0xa0
#define XCNN_ACCEL_CONTROL_BITS_OUTPUT_P_V_DATA       16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_KERNEL_H_V_DATA 0xa8
#define XCNN_ACCEL_CONTROL_BITS_PARAM_KERNEL_H_V_DATA 16
#define XCNN_ACCEL_CONTROL_ADDR_PARAM_KERNEL_W_V_DATA 0xb0
#define XCNN_ACCEL_CONTROL_BITS_PARAM_KERNEL_W_V_DATA 16

